WordPerfect Universe > Resources > Code Snippets for Macros & Merges > Jump to my files or folders as I type in the File > Open dialog
PDA
View Full Version : Jump to my files or folders as I type in the File > Open dialog


Kenneth Hobson
05-12-2009, 09:18 PM
This x4 macro opens the File > Open dialog and moves the focus to the file/folder pane. You may then type and it will jump to that file or folder.

While this works for x4, it probably will not work for other versions. This is due to the order of the controls. I know in wp12 it does not work. A quick spy shows that the afxolecontrol was 80 in x4 and 42 in wp12.

As you may note in the first commented link, I explained how to do this manually in a previous thread. In other threads we discussed how to do this using Sendkeys().

Vista does not allow SendKeys() unless you have UAC disabled. Besides that, you should avoid SendKeys() when you can anyway. Vista also requires two Shift+Tab's to get to the same pane in that dialog where previous versions require one Shift+Tab.

I did not code this macro to handle the case where you may have the Folders selected in File > Open > View > Folders. This is called the tree view by some. As it turns out, this control is called systreeview32. I leave that as an excercise for those that like a challenge or when I get more time.

This macro does handle the case where you might use either the Enchanced Dialogs set in Tools > Settings > Files, or not.

I also listed two spy programs in the comments. This lets you peek into how I figured this out.

The concepts discussed here can be used to replace other SendKeys() methods. A few API commands using DLLCALL() may be needed to help with some tasks such as getting or setting text or selections.


Application(wp; "WordPerfect"; Default; "EN")
//FileOpenFolderView.wcm by Kenneth Hobson, May 12, 2009

//I first discussed the concept of jumping to files and folders as one types in the File > Open dialog:
// http://www.wpuniverse.com/vb/showthread.php?s=&threadid=4922

InvokeDialog(FileOpenDlg)
hWnd=0
Repeat
Wait(1)
hWnd=AppLocate("Open File*")
Until(hWnd<>0)

//xxx is the current folder name
//hWnd //Classname="32770" with caption of "Open File - xxx" or "Open File"
x = RegionGetHandle(hWnd; 1) //Classname="#32770" but the caption is "browse"
afxolecontrol = RegionGetHandle(x; 5) //Classname="afxolecontrol80" with no caption
If (afxolecontrol = 0) //Enhanced dialogs were not set
afxolecontrol = hWnd
cShelldlldefview = 7
Else cShelldlldefview =1 //Enhanced dialogs were set
EndIf
shelldlldefview = RegionGetHandle(afxolecontrol; cShelldlldefview) //Classname="shelldlldefview" with no caption
syslistview = RegionGetHandle(shelldlldefview; 1) //Classname="syslistview32" with caption of "folderview"

If (syslistview = 0)
Messagebox (;;"Error: Cannot find window")
Quit
Else RegionSetFocus(syslistview)
End If

//Sendkeys() method discussed, http://www.wpuniverse.com/vb/showthread.php?s=&threadid=24947
IfPlatform("SendKeys Method") //Vista Users must disable UAC for SendKeys() to work.
InvokeDialog(FileOpenDlg)
hWnd=0
Repeat
Wait(1)
hWnd=AppLocate("Open File -*")
Until(hWnd<>0)
SendKeys("{Shift+Tab}{Shift+Tab}")
EndIfPlatform

//Another spy program Analyzer and WordPerfect method to find child windows such as those used above:
// http://www.wpuniverse.com/vb/showthread.php?s=&threadid=22925

//Code by the PatOrJk, another spy program, software at http://patorjk.com/blog/software/
Kenneth Hobson
05-14-2009, 02:14 PM
Here is the version for wp12. Here again, if you have File > Open > View > Folders, it won't work properly. As in the x4 version, it will work for both Enhanced dialogs and regular dialogs.

Another reason for this post is to show how I figured this out. You can apply these concepts to help you work with windows that we don't have commands to work with.

In this example, I commented the PerfectScript alternative method. What the RegionGetHandle() command does is that it lets us get the handle for one of the child windows IF we know the handle to the Parent window and the child number. The FindWindowEx() requires that we know the exact classname for the child window and we know the Parent window's handle. Both methods have advantages and disadvantages.

I commented some MessageBox() lines to show how you could check that you got the right classname and the caption for a window. It is a good tool to use as you design your macros.

As commented, the PatorJk program is a free program that lets you spy on the windows structure. We can get a Tree view that shows us the number of child windows and the classnames. Once we know this, these tasks become easy. Tip: drag the O button in it to your window that you want to view the Tree or show VBA code. In this example's IfPlatform() section in the attached file, I show the VBA code from PatOrJk to get the handle to the SysListView32 classname in an open file dialog. I added the Public Functions and Constants which is in its Help.



Application(wp; "WordPerfect"; Default; "EN")
//FileOpenFolderView12.wcm by Kenneth Hobson, May 14, 2009

//I first discussed the concept of jumping to files and folders as one types in the File > Open dialog:
//http://www.wpuniverse.com/vb/showthread.php?s=&threadid=4922

//API functions:
DLLCall Prototype FindWindow ("user32"; "FindWindowA"; DWord; {String(lpClassName); String(lpWindowName)})
DLLCall Prototype FindWindowEx ("user32"; "FindWindowExA"; DWord; {DWord(hWnd1); DWord(hWnd2); lpsz1; lpsz2})

//Open the File > Open, dialog and wait until it is open before executing the rest of the code.
InvokeDialog(FileOpenDlg)
hWnd=0
Repeat
Wait(1)
hWnd=AppLocate("Open File*")
Until(hWnd<>0)

//API method to find the File Open dialog's handle. hWnd found above using AppLocate(), the PerfectScript method.
//x = FindWindow("#32770"; "") //x is the same as hWnd with "Open File" as caption in non-enhanced dialog

//x2 = RegionGetHandle(hWnd; 1)
x2 = FindWindowEx(hwnd; 0; "#32770"; 0) //2nd class named "#32770" with browse as windowtext or caption
//Messagebox(;RegionGetClass(x2);RegionGetWindowText(x2)) //Used to help check steps as macro was coded.

//afxolecontrol = RegionGetHandle(hWnd; 5) //PerfectScript method.
afxolecontrol = FindWindowEx(x2; 0; "AfxOleControl42"; "") //API method.
//If 0, then enhanced dialogs were not set.
If (afxolecontrol=0)
enhancedDialogs=False
afxolecontrol=hWnd

Else
enhancedDialogs=True
EndIf
//Messagebox(;RegionGetClass(afxolecontrol);RegionGetWindowText(afxolecontrol))

//shelldlldefview = RegionGetHandle(afxolecontrol; 1)
shelldlldefview = FindWindowEx(afxolecontrol; 0; "SHELLDLL_DefView"; "") //Note: API is case-sensitive for classname.
//Messagebox(;RegionGetClass(shelldlldefview);RegionGetWindowText(shelldlldefview))

//syslistview = RegionGetHandle(shelldlldefview; 1)
syslistview = FindWindowEx(shelldlldefview; 0; "SysListView32"; 0)

//Set the focus to the folderview pane if it was found.
If (syslistview = 0)
Messagebox (;;"Error: Cannot find window")
Quit
Else
Repeat
Wait(1)
RegionSetFocus(syslistview)
Until(RegionGetFocus()=RegionGetHandle(syslistview))
End If
Powered by vBulletin® Version 4.2.5 Copyright © 2021 vBulletin Solutions Inc. All rights reserved.
