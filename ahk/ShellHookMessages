;  https://www.autohotkey.com/boards/viewtopic.php?p=260080#p260080
; Resurrected from Serenity in this post: https://autohotkey.com/board/topic/32628-tool-shellhook-messages/
; Still works great without modification
; Yeah, but I felt like modifying it a bit <= Drugwash, 2019.01.26

#NoEnv
;#NoTrayIcon
#SingleInstance Force
SetBatchLines, -1
; Process, Priority,, High
Title := "ShellHook Messages", Filters := "", Pause := 0
Global FilterType1, FilterType2, FilterType3, FilterType4, FilterType5, FilterType6
Global FilterType7, FilterType8, FilterType9, FilterType10, FilterType11, FilterType12
Global FilterType13, FilterType14, FilterType15, FilterType16, FilterType17
FilterMenu(), Gui()
Hwnd := WinExist(), WM_VSCROLL := 0x115, SB_BOTTOM := 7
DllCall( "RegisterShellHookWindow", "Ptr",Hwnd )
MsgNum := DllCall( "RegisterWindowMessage", "Str","SHELLHOOK" )
OnMessage( MsgNum, "ShellMessage" )
Return

DecToHex( ByRef lParam ) 
{
	SetFormat, Integer, Hex
	Return lParam += 0
}

FilterMenu()
{
	Global
	Menu, Filter, Add, Filter &All, FilterAll
	Menu, Filter, Add, Filter &None, FilterNone
	Menu, Filter, Add
	FilterList = WINDOWCREATED,WINDOWDESTROYED,ACTIVATESHELLWINDOW,WINDOWACTIVATED
	,GETMINRECT,REDRAW,TASKMAN,LANGUAGE,SYSMENU,ENDTASK,ACCESSIBILITYSTATE,APPCOMMAND
	,WINDOWREPLACED,WINDOWREPLACING,HIGHBIT,FLASH,RUDEAPPACTIVATED
	Loop, Parse, FilterList, `,
	{
		If A_Loopfield
			{
			Menu, Filter, Add, %A_Loopfield%, SetFilter
			FilterType%A_Index% := A_LoopField
			}
	}
	Menu, FilterMenu, Add, Message &Filter, :Filter
	Gui, Menu, FilterMenu
}

Gui()
{
	Global
	Gui, +LastFound +AlwaysOnTop +Resize ; +ToolWindow
	Gui, Margin, 0, 0
	Gui, Font, s8, Microsoft Sans Serif
	Gui, Color,, DEDEDE
	Gui, Add, ListView, w400 r10 vData +Grid +NoSort, lP (hWnd)|Process|Class|wP|Message|?
	Loop, 5
		LV_ModifyCol(A_Index, "AutoHdr")
	LV_DeleteCol(6)
	Gui, Show,, %Title%
}

ShellMessage( wParam,lParam ) 
{
	Global Data,Hwnd,WM_VSCROLL,SB_BOTTOM,Filters,Pause
	WinGetTitle, title, ahk_id %lParam%
	WinGet, pname, ProcessName, ahk_id %lParam%
	WinGet, pid, PID, ahk_id %lParam%
	WinGetClass, wcls, ahk_id %lParam%
	msg := "HSHELL_" FilterType%wParam%
	
	If wParam not in %Filters%
	{
		If ( Pause = 0 )
		{	
			DecToHex( lParam )
			LV_Add( "", lParam, pname, wcls, wParam, msg )
			Loop, 5
				LV_ModifyCol(A_Index, "AutoHdr")
			SendMessage, WM_VSCROLL, SB_BOTTOM, 0, SysListView321, ahk_id %Hwnd%		
		}	
	}	
}

SetFilter:
Menu, Filter, ToggleCheck, %A_ThisMenuItem%
Loop, Parse, FilterList, `,
{
	If ( A_ThisMenuItem = A_Loopfield )
	{
		If A_Index in %Filters% ; remove from filter
		{		
			Filter := A_Index
			Loop, Parse, Filters, `,
			{
				If ( A_Loopfield != Filter )
					NewFilters .= A_Loopfield . ( A_Loopfield != "" ? "`," : "" ) 
			}
			Filters := NewFilters, NewFilters := ""
		}	
		Else ; add to filter
		{
			Filters .= A_Index . ","
		}	
	}	
}
Return

FilterAll:
Filters =
Loop, Parse, FilterList, `,
{	
	Menu, Filter, Check, %A_Loopfield%
	Filters .= A_Index . ( A_Index != 17 ? "," : "" ) 
}
Return

FilterNone:
Loop, Parse, FilterList, `,
{
	Menu, Filter, UnCheck, %A_Loopfield%
	Filters = 
}
Return

GuiContextMenu:
Menu, Filter, Show
Return

GuiSize:
GuiControl, Move, Data, w%A_GuiWidth% h%A_GuiHeight%
SendMessage, WM_VSCROLL, SB_BOTTOM, 0, SysListView321, ahk_id %Hwnd%
Return

GuiClose:
GuiEscape:
ExitApp
Return

#IfWinActive ShellHook Messages
	C::LV_Delete()
		
	P::
	Pause :=! Pause, WinTitle := ( Pause = 0 ? Title : Title . " (Paused)" )
	WinSetTitle %WinTitle%
	Return
	
	R::Reload
	X::ExitApp	
#IfWinActive
